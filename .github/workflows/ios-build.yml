name: iOS Build Cache Experiment

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    name: Build on Apple Silicon (macos-14)
    runs-on: macos-14
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Select Xcode 16.1 (before everything)
        run: sudo xcode-select -s /Applications/Xcode_16.1.app
      - name: Install dependencies
        run: npm install
      - name: Cache Pods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: pods-static
      - name: Install CocoaPods
        run: |
          sudo xcode-select -s /Applications/Xcode_16.1.app
          sudo gem install cocoapods
          cd ios && pod install
      - name: Generate DerivedData mtime hash
        run: |
          find ~/Library/Developer/Xcode/DerivedData -type f -exec stat -f "%m" {} \; | sort | shasum | awk '{print $1}' > deriveddata-mtime.txt
      - name: Cache DerivedData
        uses: actions/cache@v4
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: deriveddata-static
      - name: Untar DerivedData after cache restore
        if: always()
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData || true
          mkdir -p ~/Library/Developer/Xcode
          if [ -f deriveddata.tar ]; then
            tar --posix -xf deriveddata.tar -C ~/Library/Developer/Xcode
          else
            echo "No deriveddata.tar cache to extract."
          fi
      - name: Build iOS
        run: |
          sudo xcode-select -s /Applications/Xcode_16.1.app
          cd ios
          time xcodebuild -workspace DemoApp.xcworkspace -scheme DemoApp -configuration Release CODE_SIGNING_ALLOWED=NO
      - name: List DerivedData before tar
        run: ls -al ~/Library/Developer/Xcode/DerivedData || echo "DerivedData does not exist"
      - name: Tar DerivedData for cache
        if: always()
        run: |
          if [ -d "${HOME}/Library/Developer/Xcode/DerivedData" ] && [ "$(ls -A ${HOME}/Library/Developer/Xcode/DerivedData)" ]; then
            tar --posix -cf deriveddata.tar -C ~/Library/Developer/Xcode DerivedData
          else
            echo "No DerivedData to tar."
            rm -f deriveddata.tar
          fi
      - name: Cache DerivedData (tar)
        uses: actions/cache@v4
        with:
          path: deriveddata.tar
          key: deriveddata-static
