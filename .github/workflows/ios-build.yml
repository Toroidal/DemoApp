name: iOS Build (Release Optimized)

on:
  push:
    branches: ["main", "release/**", "staging", "feature/**"]
  pull_request:
    branches: ["main", "staging"]

jobs:
  ios-build:
    name: Archive iOS
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      # --- Node setup and cache ---
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache Node modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: node-${{ hashFiles('package-lock.json') }}
          restore-keys: node-

      - name: Install dependencies
        run: npm install

      # --- CocoaPods setup and cache ---
      - name: Cache CocoaPods
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: pods-${{ hashFiles('ios/Podfile') }}
          restore-keys: pods-

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods
          sudo xcode-select -s /Applications/Xcode_16.1.app
          cd ios && pod install

      # --- DerivedData cache ---
      - name: Cache DerivedData (Xcode)
        uses: irgaly/xcode-cache@v1
        with:
          key: xcode-cache-deriveddata-${{ github.workflow }}-${{ github.ref_name }}
          path: ios/build/DerivedData
          restore-keys: |
            xcode-cache-deriveddata-${{ github.workflow }}-

      # --- Install and configure ccache ---
      - name: Install ccache
        run: brew install ccache

      - name: Configure ccache
        run: |
          echo "export CC='ccache clang'" >> $GITHUB_ENV
          echo "export CXX='ccache clang++'" >> $GITHUB_ENV
          echo "export OBJC='ccache clang'" >> $GITHUB_ENV
          echo "export OBJCXX='ccache clang++'" >> $GITHUB_ENV
          echo "export CCACHE_DIR=$HOME/.ccache" >> $GITHUB_ENV
          mkdir -p ~/.ccache
          ccache --max-size=5G
          ccache --set-config=compiler_check=content

      - name: Cache ccache
        uses: actions/cache@v4
        with:
          path: ~/.ccache
          key: ccache-${{ runner.os }}-${{ hashFiles('ios/Podfile', 'ios/DemoApp.xcodeproj/project.pbxproj') }}
          restore-keys: |
            ccache-${{ runner.os }}-

      # --- Xcode setup ---
      - name: Select Xcode 16.1
        run: sudo xcode-select -s /Applications/Xcode_16.1.app

      # --- Pre-build Pods (incremental) ---
      - name: Pre-build Pods (Release)
        run: |
          cd ios
          DERIVED_DATA_PATH=$(pwd)/build/DerivedData
          mkdir -p "$DERIVED_DATA_PATH"

          echo "Pre-building Pods to populate ccache..."
          xcodebuild build \
            -workspace DemoApp.xcworkspace \
            -scheme Pods-DemoApp \
            -configuration Release \
            CODE_SIGNING_ALLOWED=NO \
            -derivedDataPath "$DERIVED_DATA_PATH" \
            -quiet

      # --- Archive iOS App ---
      - name: Archive iOS App
        run: |
          cd ios
          ARCHIVE_PATH="build/DemoApp.xcarchive"
          DERIVED_DATA_PATH=$(pwd)/build/DerivedData
          mkdir -p "$DERIVED_DATA_PATH"

          echo "üèóÔ∏è  Archiving iOS App..."
          echo "üì¶  Archive path: $ARCHIVE_PATH"
          echo "üìÇ  DerivedData path: $DERIVED_DATA_PATH"

          xcodebuild archive \
            -workspace DemoApp.xcworkspace \
            -scheme DemoApp \
            -configuration Release \
            -derivedDataPath "$DERIVED_DATA_PATH" \
            CODE_SIGNING_ALLOWED=NO \
            -archivePath "$ARCHIVE_PATH"

      # --- Show ccache stats (optional) ---
      - name: Show ccache stats
        if: always()
        run: ccache -s